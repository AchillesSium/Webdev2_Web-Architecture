# This is the docker-compose-yml file that must be able to start
# your group's backend.

# Remember to comment this file well!

# After you have Docker and Docker Compose installed,
# and this file is ready, you use this file and run it with:
# `docker-compose up --build`

version: "3"

services:
  server-a:
    build:
      dockerfile: Dockerfile
      context: ./backend/server-a
    image: "group4/node:10"
    depends_on:
       -  rapid-runner-rabbit
       -  database
    command: ["./utils/wait-for-it.sh", "rapid-runner-rabbit:5672", "--",  "npm", "start"]
    ports:
      - "8080:8080"
    networks:
      - backend
  rapid-runner-rabbit:
     image: rabbitmq:3-management
     hostname: "rapid-runner-rabbit"
     environment:
       RABBITMQ_DEFAULT_VHOST: "/"
     ports:
       - "15672:15672"
       - "5672:5672"
     expose:
       - 5672
       - 15672
     networks:
       - backend
       
  server-b:
    build:
      dockerfile: Dockerfile
      context: ./backend/server-b
    image: "group4a/node:10"
    depends_on:
      -  rapid-runner-rabbit
      -  database
    command: ["./utils/wait-for-it.sh", "rapid-runner-rabbit:5672", "--",  "npm", "start"]
    ports:
      - "8082:8082"
    networks:
      - backend

  database:
    image: mongo:latest
    restart: always
    volumes:
      - db_data:/var/lib/mongo
    environment:
      MONGO_INITDB_DATABASE: appdb
    ports:
      - "27017:27017"
    networks:
      - backend

networks:
  backend:

volumes:
  db_data: {}

